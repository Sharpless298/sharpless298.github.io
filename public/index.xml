<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sharpless298&#39;s Blog</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Sharpless298&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-TW</language>
    <lastBuildDate>Sun, 31 Aug 2025 15:08:00 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Sun, 31 Aug 2025 15:08:00 +0800</pubDate>
      <guid>http://localhost:1313/about/</guid>
      <description>&lt;p&gt;test&lt;/p&gt;</description>
    </item>
    <item>
      <title>Codeforces Mashup 3</title>
      <link>http://localhost:1313/posts/codeforces-mashup-3/</link>
      <pubDate>Fri, 15 Aug 2025 00:10:22 +0800</pubDate>
      <guid>http://localhost:1313/posts/codeforces-mashup-3/</guid>
      <description>&lt;h2 id=&#34;cf-2039d&#34;&gt;CF 2039D&lt;/h2&gt;&#xA;&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/problemset/problem/2039/D&#34;&gt;Link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;&#xA;&lt;p&gt;當 $i=1,\; \forall j \in [2,n] :$ $$a_{\gcd(1,j)}=a_1 \neq \gcd(a_1,a_j)$$ 觀察得到 $$a_1 \neq \gcd(a_1,a_j) \iff a_1 \nmid a_j$$&lt;/p&gt;&#xA;&lt;p&gt;先假設 $a_1$ 滿足 $a_1 \nmid a_j$ ，繼續往下推。&lt;/p&gt;&#xA;&lt;p&gt;當 $i=2,\; \forall j \in [3,n] :$ \[ a_{\gcd(2,j)} = \begin{cases} a_1 \neq \gcd(a_2, a_j), &amp;amp; j \text{ is odd.} \\ a_2 \neq \gcd(a_2, a_j), &amp;amp; j \text{ is even.} \end{cases} \]&lt;/p&gt;</description>
    </item>
    <item>
      <title>Codeforces Mashup 2</title>
      <link>http://localhost:1313/posts/codeforces-mashup-2/</link>
      <pubDate>Sat, 09 Aug 2025 18:37:41 +0800</pubDate>
      <guid>http://localhost:1313/posts/codeforces-mashup-2/</guid>
      <description>&lt;h2 id=&#34;cf-2117e&#34;&gt;CF 2117E&lt;/h2&gt;&#xA;&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/problemset/problem/2117/E&#34;&gt;Link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;&#xA;&lt;p&gt;顯然從陣列末端操作回來會最好，接著觀察發現刪除和不刪除的情況合在一起使得 index 為 $i$ 的陣列元素能被換成集合 $\{a_{i+2},\, a_{i+3}, \, \dots,\, a_n,\, b_{i+2},\, b_{i+3},\, \dots ,\,b_n\}$ 內的任意元素，因此可以檢查 $a_i$ 或 $b_i$ 有沒有出現在集合裡，若沒有再檢查&lt;br&gt;&#xA;$a_i = b_i \lor a_i = a_{i+1} \lor b_i = b_{i+1}$ 是否為真，找到最大的 $i$ 就是答案，沒找到就把 $a_{i+1}$ 和 $b_{i+1}$ 加進集合裡，。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Codeforces Mashup 1</title>
      <link>http://localhost:1313/posts/codeforces-mashup-1/</link>
      <pubDate>Sat, 02 Aug 2025 05:18:41 +0800</pubDate>
      <guid>http://localhost:1313/posts/codeforces-mashup-1/</guid>
      <description>&lt;h2 id=&#34;cf-2034d&#34;&gt;CF 2034D&lt;/h2&gt;&#xA;&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/problemset/problem/2034/D&#34;&gt;Link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;&#xA;&lt;p&gt;定義 $cnt_0,\ cnt_1,\ cnt_2$ 分別為 $0, 1, 2$ 的個數。&lt;/p&gt;&#xA;&lt;p&gt;一個遞增數列的 $[0, cnt_0)$ 區間必定都是 $0$ ， 先考慮把這個區間的數都換成 $0$ ，以下 $\forall i \in [0, cnt_0)$。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$a_i = 0$ : 不動作。&lt;/li&gt;&#xA;&lt;li&gt;$a_i = 1$ : 找最右邊 $0$ 交換。&lt;/li&gt;&#xA;&lt;li&gt;$a_i = 2$ : 先找最右邊的 $1$ 交換， 再找最右邊的 $0$ 交換。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;最後再排序 $[cnt_0, n)$。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
